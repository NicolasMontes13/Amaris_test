AWSTemplateFormatVersion: '2010-09-09'
Description: Infraestructura para desplegar React (S3+CloudFront) y FastAPI (ECS Fargate) con documentación.

Parameters:
  FrontendBucketName:
    Type: String
    Default: fondos-frontend-app
    Description: Nombre del bucket S3 para el frontend React
  BackendImageUrl:
    Type: String
    Description: URL de la imagen Docker de FastAPI (ECR o DockerHub)
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: VPC donde desplegar ECS y el Load Balancer
  SubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
    Description: Subnets públicas para ECS y Load Balancer

Resources:
  # --- DYNAMODB TABLES ---
  FundsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: Funds
      AttributeDefinitions:
        - AttributeName: fund_id
          AttributeType: S
      KeySchema:
        - AttributeName: fund_id
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

  TransactionsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: Transactions
      AttributeDefinitions:
        - AttributeName: transaction_id
          AttributeType: S
      KeySchema:
        - AttributeName: transaction_id
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

  UsersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: Users
      AttributeDefinitions:
        - AttributeName: user_id
          AttributeType: S
      KeySchema:
        - AttributeName: user_id
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

  SubscriptionsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: Subscriptions
      AttributeDefinitions:
        - AttributeName: subscription_id
          AttributeType: S
      KeySchema:
        - AttributeName: subscription_id
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST
  # --- FRONTEND: S3 + CloudFront ---
  ReactAppBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref FrontendBucketName
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: index.html

  ReactAppBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref ReactAppBucket
      PolicyDocument:
        Statement:
          - Effect: Allow
            Principal: "*"
            Action: s3:GetObject
            Resource: !Sub '${ReactAppBucket.Arn}/*'

  ReactAppCloudFrontOAI:
    Type: AWS::CloudFront::OriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: OAI for React App

  ReactAppDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Enabled: true
        Origins:
          - Id: S3Origin
            DomainName: !GetAtt ReactAppBucket.DomainName
            S3OriginConfig:
              OriginAccessIdentity: !Sub 'origin-access-identity/cloudfront/${ReactAppCloudFrontOAI}'
        DefaultCacheBehavior:
          TargetOriginId: S3Origin
          ViewerProtocolPolicy: redirect-to-https
          AllowedMethods: [GET, HEAD, OPTIONS]
          CachedMethods: [GET, HEAD]
          ForwardedValues:
            QueryString: false
        DefaultRootObject: index.html
        ViewerCertificate:
          CloudFrontDefaultCertificate: true
        PriceClass: PriceClass_100

  # --- BACKEND: ECS Fargate + ALB ---
  BackendCluster:
    Type: AWS::ECS::Cluster
    Properties: {}

  BackendTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
      Policies:
        - PolicyName: DynamoDBAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:PutItem
                  - dynamodb:GetItem
                  - dynamodb:UpdateItem
                  - dynamodb:DeleteItem
                  - dynamodb:Scan
                  - dynamodb:Query
                Resource:
                  - !GetAtt FundsTable.Arn
                  - !GetAtt TransactionsTable.Arn
                  - !GetAtt UsersTable.Arn
                  - !GetAtt SubscriptionsTable.Arn

  BackendTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: fastapi-backend
      Cpu: 256
      Memory: 512
      NetworkMode: awsvpc
      RequiresCompatibilities: [FARGATE]
      ExecutionRoleArn: !GetAtt BackendTaskExecutionRole.Arn
      ContainerDefinitions:
        - Name: fastapi
          Image: !Ref BackendImageUrl
          PortMappings:
            - ContainerPort: 80

  BackendSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Permitir tráfico HTTP al backend
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

  BackendALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: backend-alb
      Scheme: internet-facing
      Subnets: !Ref SubnetIds
      SecurityGroups: [!Ref BackendSecurityGroup]

  BackendTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: backend-tg
      Port: 80
      Protocol: HTTP
      VpcId: !Ref VpcId
      TargetType: ip
      HealthCheckPath: /docs

  BackendListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref BackendTargetGroup
      LoadBalancerArn: !Ref BackendALB
      Port: 80
      Protocol: HTTP

  BackendService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref BackendCluster
      DesiredCount: 1
      LaunchType: FARGATE
      TaskDefinition: !Ref BackendTaskDefinition
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          Subnets: !Ref SubnetIds
          SecurityGroups: [!Ref BackendSecurityGroup]
      LoadBalancers:
        - ContainerName: fastapi
          ContainerPort: 80
          TargetGroupArn: !Ref BackendTargetGroup

Outputs:
  FundsTableName:
    Value: !Ref FundsTable
    Description: Nombre de la tabla DynamoDB de fondos
  TransactionsTableName:
    Value: !Ref TransactionsTable
    Description: Nombre de la tabla DynamoDB de transacciones
  UsersTableName:
    Value: !Ref UsersTable
    Description: Nombre de la tabla DynamoDB de usuarios
  SubscriptionsTableName:
    Value: !Ref SubscriptionsTable
    Description: Nombre de la tabla DynamoDB de suscripciones
  FrontendBucketName:
    Value: !Ref ReactAppBucket
    Description: Nombre del bucket S3 para el frontend
  FrontendCloudFrontURL:
    Value: !Sub 'https://${ReactAppDistribution.DomainName}'
    Description: URL pública del frontend (CloudFront)
  BackendALBURL:
    Value: !GetAtt BackendALB.DNSName
    Description: URL pública del backend (ALB)
